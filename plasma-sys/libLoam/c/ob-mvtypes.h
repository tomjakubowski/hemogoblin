
/* (c)  oblong industries */

// auto-generated by ./ob-mvtypes.pl; do not edit

#ifndef OB_TYPES_CRENELLATIONS
#error ob-mvtypes.h is not meant to be included directly; use ob-types.h
#endif


// ------------------------------ int8 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int8 u0, u1[2], u2;
    };
    struct
    {
      int8 a, x, y, i;
    };
    struct
    {
      int8 e, e1, e2, e12;
    };
    struct
    {
      int8 coef[4];
    };
  };
} m2int8;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int8 u0, u1[3], u2[3], u3;
    };
    struct
    {
      int8 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      int8 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      int8 coef[8];
    };
  };
} m3int8;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int8 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      int8 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      int8 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      int8 coef[16];
    };
  };
} m4int8;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int8 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      int8 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      int8 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      int8 coef[32];
    };
  };
} m5int8;


// ------------------------------ unt8 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt8 u0, u1[2], u2;
    };
    struct
    {
      unt8 a, x, y, i;
    };
    struct
    {
      unt8 e, e1, e2, e12;
    };
    struct
    {
      unt8 coef[4];
    };
  };
} m2unt8;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt8 u0, u1[3], u2[3], u3;
    };
    struct
    {
      unt8 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      unt8 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      unt8 coef[8];
    };
  };
} m3unt8;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt8 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      unt8 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      unt8 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      unt8 coef[16];
    };
  };
} m4unt8;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt8 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      unt8 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      unt8 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      unt8 coef[32];
    };
  };
} m5unt8;


// ------------------------------ int16 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int16 u0, u1[2], u2;
    };
    struct
    {
      int16 a, x, y, i;
    };
    struct
    {
      int16 e, e1, e2, e12;
    };
    struct
    {
      int16 coef[4];
    };
  };
} m2int16;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int16 u0, u1[3], u2[3], u3;
    };
    struct
    {
      int16 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      int16 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      int16 coef[8];
    };
  };
} m3int16;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int16 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      int16 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      int16 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      int16 coef[16];
    };
  };
} m4int16;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int16 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      int16 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      int16 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      int16 coef[32];
    };
  };
} m5int16;


// ------------------------------ unt16 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt16 u0, u1[2], u2;
    };
    struct
    {
      unt16 a, x, y, i;
    };
    struct
    {
      unt16 e, e1, e2, e12;
    };
    struct
    {
      unt16 coef[4];
    };
  };
} m2unt16;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt16 u0, u1[3], u2[3], u3;
    };
    struct
    {
      unt16 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      unt16 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      unt16 coef[8];
    };
  };
} m3unt16;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt16 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      unt16 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      unt16 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      unt16 coef[16];
    };
  };
} m4unt16;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt16 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      unt16 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      unt16 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      unt16 coef[32];
    };
  };
} m5unt16;


// ------------------------------ int32 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int32 u0, u1[2], u2;
    };
    struct
    {
      int32 a, x, y, i;
    };
    struct
    {
      int32 e, e1, e2, e12;
    };
    struct
    {
      int32 coef[4];
    };
  };
} m2int32;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int32 u0, u1[3], u2[3], u3;
    };
    struct
    {
      int32 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      int32 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      int32 coef[8];
    };
  };
} m3int32;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int32 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      int32 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      int32 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      int32 coef[16];
    };
  };
} m4int32;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int32 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      int32 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      int32 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      int32 coef[32];
    };
  };
} m5int32;


// ------------------------------ unt32 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt32 u0, u1[2], u2;
    };
    struct
    {
      unt32 a, x, y, i;
    };
    struct
    {
      unt32 e, e1, e2, e12;
    };
    struct
    {
      unt32 coef[4];
    };
  };
} m2unt32;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt32 u0, u1[3], u2[3], u3;
    };
    struct
    {
      unt32 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      unt32 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      unt32 coef[8];
    };
  };
} m3unt32;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt32 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      unt32 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      unt32 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      unt32 coef[16];
    };
  };
} m4unt32;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt32 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      unt32 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      unt32 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      unt32 coef[32];
    };
  };
} m5unt32;


// ------------------------------ int64 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int64 u0, u1[2], u2;
    };
    struct
    {
      int64 a, x, y, i;
    };
    struct
    {
      int64 e, e1, e2, e12;
    };
    struct
    {
      int64 coef[4];
    };
  };
} m2int64;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int64 u0, u1[3], u2[3], u3;
    };
    struct
    {
      int64 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      int64 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      int64 coef[8];
    };
  };
} m3int64;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int64 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      int64 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      int64 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      int64 coef[16];
    };
  };
} m4int64;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      int64 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      int64 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      int64 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      int64 coef[32];
    };
  };
} m5int64;


// ------------------------------ unt64 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt64 u0, u1[2], u2;
    };
    struct
    {
      unt64 a, x, y, i;
    };
    struct
    {
      unt64 e, e1, e2, e12;
    };
    struct
    {
      unt64 coef[4];
    };
  };
} m2unt64;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt64 u0, u1[3], u2[3], u3;
    };
    struct
    {
      unt64 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      unt64 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      unt64 coef[8];
    };
  };
} m3unt64;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt64 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      unt64 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      unt64 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      unt64 coef[16];
    };
  };
} m4unt64;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      unt64 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      unt64 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz, yzv,
        zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy, wxyz, i;
    };
    struct
    {
      unt64 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35, e41,
        e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513, e1234,
        e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      unt64 coef[32];
    };
  };
} m5unt64;


// ------------------------------ float32 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float32 u0, u1[2], u2;
    };
    struct
    {
      float32 a, x, y, i;
    };
    struct
    {
      float32 e, e1, e2, e12;
    };
    struct
    {
      float32 coef[4];
    };
  };
} m2float32;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float32 u0, u1[3], u2[3], u3;
    };
    struct
    {
      float32 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      float32 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      float32 coef[8];
    };
  };
} m3float32;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float32 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      float32 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      float32 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      float32 coef[16];
    };
  };
} m4float32;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float32 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      float32 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz,
        yzv, zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy,
        wxyz, i;
    };
    struct
    {
      float32 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35,
        e41, e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513,
        e1234, e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      float32 coef[32];
    };
  };
} m5float32;


// ------------------------------ float64 ------------------------------


//
// two-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float64 u0, u1[2], u2;
    };
    struct
    {
      float64 a, x, y, i;
    };
    struct
    {
      float64 e, e1, e2, e12;
    };
    struct
    {
      float64 coef[4];
    };
  };
} m2float64;


//
// three-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float64 u0, u1[3], u2[3], u3;
    };
    struct
    {
      float64 a, x, y, z, xy, yz, zx, i;
    };
    struct
    {
      float64 e, e1, e2, e3, e12, e23, e31, e123;
    };
    struct
    {
      float64 coef[8];
    };
  };
} m3float64;


//
// four-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float64 u0, u1[4], u2[6], u3[4], u4;
    };
    struct
    {
      float64 a, x, y, z, v, xy, yz, zv, vx, xz, yv, xyz, yzv, zvx, vxy, i;
    };
    struct
    {
      float64 e, e1, e2, e3, e4, e12, e23, e34, e41, e13, e24, e123, e234, e341,
        e412, e1234;
    };
    struct
    {
      float64 coef[16];
    };
  };
} m4float64;


//
// five-dimensional multivectors
//

typedef struct
{
  union
  {
    struct
    {
      float64 u0, u1[5], u2[10], u3[10], u4[5], u5;
    };
    struct
    {
      float64 a, x, y, z, v, w, xy, yz, zv, vw, wx, xz, yv, zw, vx, wy, xyz,
        yzv, zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz, xyzv, yzvw, zvwx, vwxy,
        wxyz, i;
    };
    struct
    {
      float64 e, e1, e2, e3, e4, e5, e12, e23, e34, e45, e51, e13, e24, e35,
        e41, e52, e123, e234, e345, e451, e512, e124, e235, e341, e452, e513,
        e1234, e2345, e3451, e4512, e5123, e12345;
    };
    struct
    {
      float64 coef[32];
    };
  };
} m5float64;
