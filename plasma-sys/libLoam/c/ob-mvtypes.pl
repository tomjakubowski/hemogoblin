#!/usr/bin/perl -w

sub print_mvs {
    my $type = $_[0];
    print <<CRUD;


// ------------------------------ $type ------------------------------


//
// two-dimensional multivectors
//

typedef struct
  { union
      { struct { $type u0, u1[2], u2; };
        struct { $type a, x, y, i; };
        struct { $type e, e1, e2, e12; };
        struct { $type coef[4]; };
      };
  } m2$type;


//
// three-dimensional multivectors
//

typedef struct
  { union
      { struct { $type u0, u1[3], u2[3], u3; };
        struct { $type a, x, y, z, xy, yz, zx, i; };
        struct { $type e, e1, e2, e3, e12, e23, e31, e123; };
        struct { $type coef[8]; };
      };
  } m3$type;


//
// four-dimensional multivectors
//

typedef struct
  { union
      { struct { $type u0, u1[4], u2[6], u3[4], u4; };
        struct { $type a, x, y, z, v, xy, yz, zv, vx, xz, yv,
                     xyz, yzv, zvx, vxy, i;
               };
        struct { $type e,
                     e1, e2, e3, e4,
                     e12, e23, e34, e41, e13, e24,
                     e123, e234, e341, e412,
                     e1234;
               };
        struct { $type coef[16]; };
      };
  } m4$type;


//
// five-dimensional multivectors
//

typedef struct
  { union
      { struct { $type u0, u1[5], u2[10], u3[10], u4[5], u5; };
        struct { $type a,
                     x, y, z, v, w,
                     xy, yz, zv, vw, wx, xz, yv, zw, vx, wy,
                     xyz, yzv, zvw, vwx, wxy, xyv, yzw, zvx, vwy, wxz,
                     xyzv, yzvw, zvwx, vwxy, wxyz,
                     i;
               };
        struct { $type e,
                     e1, e2, e3, e4, e5,
                     e12, e23, e34, e45, e51,
                     e13, e24, e35, e41, e52,
                     e123, e234, e345, e451, e512,
                     e124, e235, e341, e452, e513,
                     e1234, e2345, e3451, e4512, e5123,
                     e12345;
               };
        struct { $type coef[32]; };
      };
  } m5$type;
CRUD
}

print <<UGH;

/* (c)  oblong industries */

// auto-generated by $0; do not edit

#ifndef OB_TYPES_CRENELLATIONS
#error ob-mvtypes.h is not meant to be included directly; use ob-types.h
#endif
UGH

foreach my $type (qw(int8 unt8 int16 unt16 int32 unt32 int64 unt64 float32 float64)) {
    print_mvs ($type);
}
